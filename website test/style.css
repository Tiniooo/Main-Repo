/* From Uiverse.io by elijahgummer */ 
.switch {
    position: relative;
    width: 2000px;
    height: 50px;
    box-sizing: border-box;
    padding: 3px;
    background: #0d0d0d;
    border-radius: 6px;
    box-shadow:
      inset 0 1px 1px 1px rgba(0, 0, 0, 0.5),
      0 1px 0 0 rgba(255, 255, 255, 0.1);
  }
  .switch input[type="checkbox"] {
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
  }
  .switch input[type="checkbox"] + label {
    position: relative;
    display: block;
    left: 0;
    width: 50%;
    height: 100%;
    background: #1b1c1c;
    border-radius: 3px;
    box-shadow: inset 0 1px 0 0 rgba(255, 255, 255, 0.1);
    transition: all 0.5s ease-in-out;
  }
  .switch input[type="checkbox"] + label:before {
    content: "";
    display: inline-block;
    width: 5px;
    height: 5px;
    margin-left: 10px;
    background: #fff;
    border-radius: 50%;
    vertical-align: middle;
    box-shadow:
      0 0 5px 2px rgba(165, 15, 15, 0.9),
      0 0 3px 1px rgba(165, 15, 15, 0.9);
    transition: all 0.5s ease-in-out;
  }
  .switch input[type="checkbox"] + label:after {
    content: "";
    display: inline-block;
    width: 0;
    height: 100%;
    vertical-align: middle;
  }
  .switch input[type="checkbox"] + label i {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: 3px;
    height: 24px;
    margin-top: -12px;
    margin-left: -1.5px;
    border-radius: 2px;
    background: #0d0d0d;
    box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.3);
  }
  .switch input[type="checkbox"] + label i:before,
  .switch input[type="checkbox"] + label i:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 2px;
    background: #0d0d0d;
    box-shadow: 0 1px 0 0 rgba(255, 255, 255, 0.3);
  }
  .switch input[type="checkbox"] + label i:before {
    left: -7px;
  }
  .switch input[type="checkbox"] + label i:after {
    left: 7px;
  }
  .switch input[type="checkbox"]:checked + label {
    left: 50%;
  }
  .switch input[type="checkbox"]:checked + label:before {
    box-shadow:
      0 0 5px 2px rgba(15, 165, 70, 0.9),
      0 0 3px 1px rgba(15, 165, 70, 0.9);
  }
.messageBox {
    width: fit-content;
    height: 80px;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #2d2d2d;
    padding: 0 15px;
    border-radius: 10px;
    border: 1px solid rgb(63, 63, 63);
  }
  .messageBox:focus-within {
    border: 1px solid rgb(110, 110, 110);
  }
  .fileUploadWrapper {
    width: fit-content;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: Arial, Helvetica, sans-serif;
  }
  
  #file {
    display: none;
  }
  .fileUploadWrapper label {
    cursor: pointer;
    width: fit-content;
    height: fit-content;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }
  .fileUploadWrapper label svg {
    height: 18px;
  }
  .fileUploadWrapper label svg path {
    transition: all 0.3s;
  }
  .fileUploadWrapper label svg circle {
    transition: all 0.3s;
  }
  .fileUploadWrapper label:hover svg path {
    stroke: #fff;
  }
  .fileUploadWrapper label:hover svg circle {
    stroke: #fff;
    fill: #3c3c3c;
  }
  .fileUploadWrapper label:hover .tooltip {
    display: block;
    opacity: 1;
  }
  .tooltip {
    position: absolute;
    top: -40px;
    display: none;
    opacity: 0;
    color: white;
    font-size: 10px;
    text-wrap: nowrap;
    background-color: #000;
    padding: 6px 10px;
    border: 1px solid #3c3c3c;
    border-radius: 5px;
    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.596);
    transition: all 0.3s;
  }
  #messageInput {
    width: 200px;
    height: 100%;
    background-color: transparent;
    outline: none;
    border: none;
    padding-left: 10px;
    color: white;
  }
  #messageInput:focus ~ #sendButton svg path,
  #messageInput:valid ~ #sendButton svg path {
    fill: #3c3c3c;
    stroke: white;
  }
  
  #sendButton {
    width: fit-content;
    height: 100%;
    background-color: transparent;
    outline: none;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s;
  }
  #sendButton svg {
    height: 18px;
    transition: all 0.3s;
  }
  #sendButton svg path {
    transition: all 0.3s;
  }
  #sendButton:hover svg path {
    fill: #3c3c3c;
    stroke: white;
  }
    
  /* From Uiverse.io by jeremyssocial */ 
@keyframes blinkCursor {
    50% {
      border-right-color: transparent;
    }
  }
  
  @keyframes typeAndDelete {
    0%,
    10% {
      width: 0;
    }
    45%,
    55% {
      width: 6.2em;
    } /* adjust width based on content */
    90%,
    100% {
      width: 0;
    }
  }
  
  .terminal-loader {
    border: 0.1em solid #333;
    background-color: #1a1a1a;
    color: #0f0;
    font-family: "Courier New", Courier, monospace;
    font-size: 1em;
    padding: 1.5em 1em;
    width: 12em;
    margin: 100px auto;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    border-radius: 4px;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
  }
  
  .terminal-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1.5em;
    background-color: #333;
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
    padding: 0 0.4em;
    box-sizing: border-box;
  }
  
  .terminal-controls {
    float: right;
  }
  
  .control {
    display: inline-block;
    width: 0.6em;
    height: 0.6em;
    margin-left: 0.4em;
    border-radius: 50%;
    background-color: #777;
  }
  
  .control.close {
    background-color: rgb(20, 20, 20);
  }
  
  .control.minimize {
    background-color: rgb(20, 20, 20);
  }
  
  .control.maximize {
    background-color: rgb(20, 20, 20);
  }
  
  .terminal-title {
    float: left;
    line-height: 1.5em;
    color: #eee;
  }
  
  .text {
    display: inline-block;
    white-space: nowrap;
    overflow: hidden;
    border-right: 0.2em solid green; /* Cursor */
    animation: typeAndDelete 4s steps(11) infinite,
      blinkCursor 0.5s step-end infinite alternate;
    margin-top: 1.5em;
  }
  